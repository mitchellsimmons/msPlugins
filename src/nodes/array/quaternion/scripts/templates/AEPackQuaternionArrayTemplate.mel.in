// ------ AE Template ----------------------------------------------------------------------------------------------------------------------------------------------------

global proc AE${NODE_NAME_PREFIX}PackQuaternionArrayTemplate( string $nodeName )
{
    string $annotation;

    editorTemplate -beginScrollLayout;

    editorTemplate -beginLayout "General" -collapse 0;

        MRS_AEspacer();
        
        $annotation = "Defines how the array is filled. If true, the output array will emulate logical contiguity by assigning the fill value to any sparse element.";
        editorTemplate -label "Fill Logically" -annotation $annotation -addControl "fillLogically";

        MRS_AEspacer();

        $annotation = "Defines the size of the output array. If the size is larger than the number of inputs, the array will be filled using the fill value.";
        editorTemplate -label "Size" -annotation $annotation -addControl "size";

        MRS_AEspacer();

        $annotation = "Defines the value which is used to fill the output array if the value of the size attribute is smaller than the number of inputs.";
        editorTemplate -label "Fill" -annotation $annotation -addControl "fill";

        MRS_AEspacer();

        editorTemplate -callCustom "MRS_PackQuaternionArray_input_AEnew" "MRS_PackQuaternionArray_input_AEreplace" "input";

        MRS_AEspacer();

    editorTemplate -endLayout;

    // Defaults
    AEdependNodeTemplate $nodeName;
    editorTemplate -addExtraControls;

    editorTemplate -endScrollLayout;
}


// ------ Input ------------------------------------------------------------------------------------------------------------------------------------------------

//  Description
//  -----------
//  This procedure creates a custom layout/controls for the "input" attribute
//  We implement slightly different functionality to that which can be found in the "AEnewNonNumericMulti" file which Maya uses for compound array types
//  The default implementation has a layout issue (cuts off part of the control) and renames controls using physical indices instead of logical indices
//  It will produce a single global variable which holds the name of the outermost frameLayout which can be used to retrieve child controls
global proc MRS_PackQuaternionArray_input_AEnew(string $inputNodeAttrName)
{
    // Global names
    global string $MRS_PackQuaternionArray_AE_frameLayout_input;

    string $annotation = "Defines the input values used to build the output array.";
    $MRS_PackQuaternionArray_AE_frameLayout_input = MRS_AEnewVectorArray($inputNodeAttrName, $annotation);
}


//  Description
//  -----------
//  This procedure updates the custom layout/controls that have been created for the "input" attribute
global proc MRS_PackQuaternionArray_input_AEreplace(string $inputNodeAttrName)
{
    // Global values
    global string $MRS_PackQuaternionArray_AE_frameLayout_input;

    MRS_AEreplaceVectorArray($inputNodeAttrName, $MRS_PackQuaternionArray_AE_frameLayout_input);
}